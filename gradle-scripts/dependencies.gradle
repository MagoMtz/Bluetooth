ext {
    //App settings
    compileSdkV = 28
    minSdkV = 19
    targetSdkV = 28
    codeV = 1
    nameV = '1.0'

    //Versions
    supportV = '28.0.0'
    constraintLayoutV = '1.1.3'
    junitV = '4.12'
    testRunnerV = '1.0.2'
    testEspressoV = '3.0.2'
    archLifecycleV = '1.1.1'
    gsonV = '2.8.5'
    retrofitV = '2.4.0'
    rxAndroidV = '2.1.0'
    rxJavaV = '2.1.3'
    logginInterceptorV = '3.8.0'
    volleyV = '1.1.1'
    roomV = '1.1.1'

    //Packages
    supportPackage = 'com.android.support'
    constraintLayoutPackage = 'com.android.support.constraint'
    junitPackage = 'junit'
    testPackage = 'com.android.support.test'
    espressoPackage = 'com.android.support.test.espresso'
    archLifecyclePackage = 'android.arch.lifecycle'
    gsonPackage = 'com.google.code.gson'
    retrofitPackage = 'com.squareup.retrofit2'
    rxJavaPackage = 'io.reactivex.rxjava2'
    okHttp3Package = 'com.squareup.okhttp3'
    volleyPackage = 'com.android.volley'
    roomPackage = 'android.arch.persistence.room'

    //App dependencies
    supportDependencies = [
            appCompat : buildDependency(supportPackage, 'appcompat-v7', supportV),
            design : buildDependency(supportPackage, 'design', supportV),
            constraintLayout : buildDependency(constraintLayoutPackage, 'constraint-layout', constraintLayoutV),
    ]

    modulesDependencies = [
            gson : buildDependency(gsonPackage, 'gson', gsonV),
            retrofit : buildDependency(retrofitPackage, 'retrofit', retrofitV),
            retrofitGSONConverter : buildDependency(retrofitPackage, 'converter-gson', retrofitV),
            retrofitrxjava : buildDependency(retrofitPackage, 'adapter-rxjava2', retrofitV),
            rxAndroid : buildDependency(rxJavaPackage, 'rxandroid', rxAndroidV),
            rxJava : buildDependency(rxJavaPackage, 'rxjava', rxJavaV),
            logginInterceptor : buildDependency(okHttp3Package, 'logging-interceptor', logginInterceptorV),
            volley : buildDependency(volleyPackage, 'volley', volleyV)
    ]

    testingDependencies = [
            junit : buildDependency(junitPackage, 'junit', junitV),
            testRunner : buildDependency(testPackage, 'runner', testRunnerV),
            espresso : buildDependency(espressoPackage, 'espresso-core', testEspressoV),
    ]

    roomDependencies = [
            runtime : buildDependency(roomPackage, 'runtime', roomV),
            roomRx : buildDependency(roomPackage, 'rxjava2', roomV),
            compiler : buildDependency(roomPackage, 'compiler', roomV)
    ]
}

static String buildDependency(String pack, String dependency, String version) {
    return "${pack}:${dependency}:$version"
}